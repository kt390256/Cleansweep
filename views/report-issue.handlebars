<!---
@author  CSC 648 Team 11
@version 1.0.0 03/30/2018
-->
<div class="container">
  <div class="py-3 text-center">
    <h2>Report Issue</h2>
    {{ errors }}
  </div>
  <div class="row justify-content-md-center">
    <div class="col-md-8">

      <form class="needs-validation" novalidate="" enctype="multipart/form-data" action="/report-issue" method="POST">
        <div class="mb-3">
          <label for="title">Report Title</label>
          <input type="text" class="form-control" name="title" id="title" pattern="^[a-zA-Z ]+$" placeholder="Example: Dog Poop" required="">
          <div class="invalid-feedback">
            Please enter a valid issue title.
          </div>
        </div>

        <div class="mb-3">
          <div class="form-group">
            <label for="park-name">Park Name</label>
        <input type="text" class="form-control" name="parkName" id="park-name" placeholder="Golden Gate Park" >
          </div>
        </div>

        <div class="mb-3">
          <div class="form-group">
            <label for="issue-type">Issue Type</label>
            <select class="form-control" name="issueType" id="issue-type">
              {{#each cNames}}
              <option value="{{name}}">{{name}}</option>
              {{/each}}
            </select>
          </div>
        </div>

        <div class="mb-3">
          <label for="description">Issue Description</label>
          <textarea type="text" class="form-control" name="description" id="description" 	pattern="^.{1,300}" placeholder="Dog pooped is everywhere at this park." required=""></textarea>
          <div class="invalid-feedback">
            Please enter a description up to 300 characters.
          </div>
        </div>
        <div class="mb-3">
          <div class="custom-file">
            <input type="file" class="custom-file-input" name="uploadImage" id="file-input" accept=".jpg,.png">
            <div class="invalid-feedback">
              Please limit your image uploads to .jpg, .jpeg, or .png
            </div>
            <label class="custom-file-label" for="imgUpload">Image (.jpg .jpeg .png files only)</label>
          </div>
        </div>
        {{#if user.id}}
          <button class="btn btn-primary btn-lg btn-block mb-4" type="submit">Report Issue</button>
        {{else}}
          <button class="btn btn-primary btn-lg btn-block mb-4" type="submit" data-toggle="modal" data-target="#loginModal">Report Issue</button>
        {{/if}}
      </form>

      <!-- Modal content-->
      <div id="loginModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
          <!-- Modal content-->
          <div class="modal-content">
            <div class="modal-header" style="padding:35px 50px;">
              <h4><span  class="glyphicon glyphicon-lock"></span>Login</h4>
              <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body" style="padding:40px 50px;">


              <form role="needs-validation" novalidate="" action="/lazy-login" method="POST">
                <div class="form-group">
                  <label for="usrname"><span class="glyphicon glyphicon-user"></span> Username</label>
                  <input type="text" class="form-control" name="username" placeholder="Username" required="">
                   <div class="invalid-feedback">
                      Please enter a valid username.
                  </div>
                </div>
                <div class="form-group">
                  <label for="psw"><span class="glyphicon glyphicon-eye-open"></span> Password</label>
                  <input type="password" class="form-control" name="password" placeholder="Enter password" required="">
                   <div class="invalid-feedback">
                      Please enter a valid password.
                  </div>
                </div>
                <button id="tempLogin" type="submit" class="btn btn-primary btn-block"><span class="glyphicon glyphicon-off"></span> Login</button>
              </form>




                <a id="tempRegister" class="btn btn-danger btn-block" data-toggle="modal" data-target="#registerModal">Register</a>
              <label><input type="checkbox" checked="checked" name="remember">Remember me</label>

            </div>
            <div class="modal-footer">
              <button id="toggleLogReg" class="btn btn-outline-primary"><span id='account'>Don't have an account?</span></button>
              <button type="submit" class="btn btn-danger btn-default pull-right" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> Cancel</button>
            </div>
          </div>
        </div>
      </div>

      <!-- Modal content-->
      <div id="registerModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
          <!-- Modal content-->
          <div class="modal-content">
            <div class="modal-header" style="padding:35px 50px;">
              <h4><span class="glyphicon glyphicon-lock"></span>Login</h4>
              <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body" style="padding:40px 50px;">
              <form class="needs-validation" novalidate="" action="/lazy-sign-up" method="POST">
                <div class="row">
                  <div class="col-md-6 mb-3">
                    <label for="firstName">First name</label>
                    <input type="text" class="form-control" name="firstName" id="firstName" pattern="^[a-zA-Z]+$" placeholder="John" value="" required="">
                    <div class="invalid-feedback">
                      Valid first name is required.
                    </div>
                  </div>
                  <div class="col-md-6 mb-3">
                    <label for="lastName">Last name</label>
                    <input type="text" class="form-control" name="lastName" id="lastName" pattern="^[a-zA-Z]+$" placeholder="Doe" value="" required="">
                    <div class="invalid-feedback">
                      Valid last name is required.
                    </div>
                  </div>
                </div>

                <div class="mb-3">
                  <label for="title">Title</label>
                  <input type="text" class="form-control" name="title" pattern="^.{1,50}" id="userTitle" placeholder="Front End Lead">
                  <div class="invalid-feedback">
                    Please enter a title.
                  </div>
                </div>

                <div class="mb-3">
                  <label for="hobbies">Hobbies</label>
                  <input type="text" class="form-control" name="hobbies" id="hobbies" pattern="^.{1,50}" placeholder="Swimming, Jump Rope, Videos Games, etc.">
                  <div class="invalid-feedback">
                    Please enter some homes separated by a comma.
                  </div>
                </div>

                <div class="mb-3">
                  <label for="username">Username</label>
                  <div class="input-group">
                    <div class="input-group-prepend">
                      <span class="input-group-text">@</span>
                    </div>
                    <input type="text" class="form-control" name="username" id="username" pattern="^.{1,30}" placeholder="Username" required="">
                    <div class="invalid-feedback" style="width: 100%;">
                      Your username is required.
                    </div>
                  </div>
                </div>

                <div class="mb-3">
                  <label for="email">Email <span class="text-muted">(Optional)</span></label>
                  <input type="email" class="form-control" name="email" id="email" placeholder="you@example.com" pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,3}$">
                  <div class="invalid-feedback">
                    Please enter a valid email address (you@example.com).
                  </div>
                </div>

                <div class="mb-3">
                  <label for="password">Password</label>
                  <input type="password" class="form-control" name="password" id="password" placeholder="Password" pattern=".{8,20}" required>
                  <div class="invalid-feedback">
                    Please enter a password between 8-20 characters.
                  </div>
                </div>

                <button class="btn btn-primary btn-lg btn-block" type="submit">Sign Up</button>
              </form>
              <br>
              <button class="btn btn-danger btn-lg" data-toggle="modal" data-target="#loginModal">Login</button>
            </div>
            <div class="modal-footer">
              <button type="submit" class="btn btn-danger btn-default pull-right" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> Cancel</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  /*
    Function to carry out the actual PUT request to S3 using the signed request from the app.
  */
  function uploadFile(file, signedRequest, url){
    const xhr = new XMLHttpRequest();
    xhr.open('PUT', signedRequest);
    xhr.onreadystatechange = () => {
      if(xhr.readyState === 4){
        if(xhr.status === 200) {
          console.log(`200`);
        } else {
          alert('Could not upload file.');
        }
      }
    };
    xhr.send(file);
  }
  /*
    Function to get the temporary signed request from the app.
    If request successful, continue to upload the file using this signed
    request.
  */
  function getSignedRequest(file){
    const xhr = new XMLHttpRequest();
    xhr.open('GET', `/sign-s3?file-name=${file.name}&file-type=${file.type}`);
    xhr.onreadystatechange = () => {
      if(xhr.readyState === 4){
        console.log(xhr.status);
        if(xhr.status === 200){
          const response = JSON.parse(xhr.responseText);
          uploadFile(file, response.signedRequest, response.url);
        }
        else{
          alert('Could not get signed URL.');
        }
      }
    };
    xhr.send();
  }
  /*
   Function called when file input updated. If there is a file selected, then
   start upload procedure by asking for a signed request from the app.
  */
  function initUpload(){
    const files = document.getElementById('file-input').files;
    const file = files[0];
    var fileType = file.type.split('/').pop();
    if(file == null){
      return alert('No file selected.');
    }else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg'){
      getSignedRequest(file);    
    }else {
      return alert('File Type must be .png, .jpeg, or .jpg.  Issue will not be reported with selected file.');
    }
  }

  /*
   Bind listeners when the page loads.
  */
  (() => {
      document.getElementById('file-input').onchange = initUpload;
  })();

//run on page load
window.onload = function() {

  //If sessionStorage is storing default values, then exit the function and do not store any value
  // if(sessionStorage.getItem('title')==="title"){
  //   return;
  // }
  //If values are not blank, restore them to the fields
  const title = sessionStorage.getItem('title');
  if(title !== null ) $('#title').val(title);

  const parkName = sessionStorage.getItem('parkName');
  if(parkName !== null) $('#park-name').val(parkName);

  const issueType = sessionStorage.getItem('issueType');
  if(issueType !== null) $('#issue-type').val(issueType);

  const description = sessionStorage.getItem('description');
  if(description!== null) $('#description').val(description);

  const image = sessionStorage.getItem('image');
  if(image!==null) $('#file-input').val(image);

//before refreshing the page, save the form data to sessionStorage
  window.onbeforeunload = function(){
    //the first argv is an arbitrary variable, the second one is the id
    sessionStorage.setItem('title', $('#title').val());
    sessionStorage.setItem('parkName', $('#park-name').val());
    sessionStorage.setItem('issueType', $('#issue-type').val());
    sessionStorage.setItem('description', $('#description').val());
    sessionStorage.setItem('image', $('#file-input').val());
  }

}//end of function

$(function(){

  const temp = "Don't have an account?";
  const temp1 = "Already have an account?";

  $("#tempRegister").hide();
  //select button
  $('#toggleLogReg').click(function(){
    //if login buton is there
    $('#tempLogin').toggle();
    $("#tempRegister").toggle();

    if($('#account').text()==temp){
      console.log("changing to temp1");
    $('#toggleLogReg').text(temp1);
  }//end of if
})//end of #toggLogReg

});

  </script>
